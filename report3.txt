建模：即pt图建模：将工序设为结点，若工序i为工序j的先序工序，则存在有向边eij，权值为i花费的时间。
利用邻接表存储有向边。
算法：即书中的算法。首先设置两个虚拟结点：v0和vn+1。这两个结点分别为原图中所有没有前序结点的点的
前序结点以及所有没有后继结点的点的后继结点。他们花费的时间均设为零。
这样我们需要求得即为从v0到所有结点的最长路径加上其本身的花费时间，即最早完成时间；并且算出最长可延误时间，
判断其大于或小于1.
依照书中的算法，首先利用sort函数将原图中的结点重新排序，排序结果利用数组u记录。这样得到新的结点的排序满足
前序结点的序号小于后继结点的序号。借着利用pt（）函数，计算到每个点的最长路径，存到数组dis中。
求得最长路径后，利用pt_（）函数，求解每个点的最长延误时间，用yw（）函数判断其是否大于等于1.若大于等于1返回1
否则返回0.